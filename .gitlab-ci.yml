include:
  - "/.gitlab-ci.builder.yml"

release-build:
  stage: build
  interruptible: true
  only:
    - /^release\/*/
    - /^hotfix\/*/
    - develop
    - master
    - tags
  artifacts:
    paths:
      - target/release/samotop-server
      - Cargo.lock
  cache: &cache
    key:
      files:
        - Cargo.lock
    paths:
      - target/
      - $CARGO_HOME
    policy: pull
  before_script:
    - rustc --version --verbose
    - cargo --version --verbose
    - mkdir -p target
    - mkdir -p "$CARGO_HOME"
    - du -shx target
    - du -shx "$CARGO_HOME"
  script:
    - cargo build --all-features --release --color always
    - cargo test --all-features --release --color always

debug-build:
  extends: release-build
  only:
    - branches
  artifacts:
    paths:
      - target/debug/samotop-server
      - Cargo.lock
  cache: 
    <<: *cache
    policy: pull-push
  script:
    - cargo build --all-targets --all-features --color always
    - cargo test --all-targets --all-features --color always
    # cleanup target folder
    - ./clean.sh

check-test:
  extends: release-build
  only:
    - branches
  script:
    - cargo check --all-targets --all-features --bins --tests --benches --examples --color always
    - cargo clippy --all-targets --all-features --color always -- -Dclippy::all
    - ./fix.sh

audit-test:
  extends: check-test
  script:
    - cargo audit --deny warnings --color always

nightly-test:
  stage: build
  allow_failure: true
  interruptible: true
  variables:
    RUST_BACKTRACE: 1
  only:
    - branches
  cache:
    <<: *cache
    key:
      prefix: nightly
      files:
        - Cargo.lock
    policy: pull-push
  before_script:
    - rustup default nightly
    - rustc --version --verbose
    - cargo --version --verbose
  script:
    - cargo test --all-targets --all-features --color always
    - cargo clippy --all-features --color always -- -Dclippy::all
    - cargo check --all-targets --all-features --bins --tests --benches --examples --color always
    # cleanup target folder
    - ./clean.sh

.example-template:
  stage: build
  only:
    - branches
  interruptible: true
  before_script:
    - rustc --version --verbose
    - cargo --version --verbose
    - cargo build --example ${EXAMPLE:?} --color always
  variables:
    INPUT: samotop/examples/mailsession.txt
  script:
    - RUST_LOG=trace cargo run --example ${EXAMPLE:?} &
    - sleep 5
    - nc localhost 2525 <"$INPUT" >client.log
    - cat "$INPUT"
    - cat client.log
    - find tmp/samotop/spool/new/ -type f -print -exec cat {} \; || true
    - test -z "$OUTPUT" || diff tmp/samotop/spool/new/* "$OUTPUT"

example-lmtp:
  extends: .example-template
  variables:
    EXAMPLE: to-lmtp-tcp
  services:
    - name: dovecot/dovecot:2.3.11
      alias: dovecot

example-default:
  extends: .example-template
  variables:
    EXAMPLE: default

example-dir:
  extends: .example-template
  variables:
    EXAMPLE: to-dirmail
    OUTPUT: samotop/examples/mailbody.txt

example-prudence:
  extends: .example-template
  variables:
    EXAMPLE: prudent
  script:
    - RUST_LOG=trace cargo run --example ${EXAMPLE:?} &
    - sleep 5
    - echo ehlo booo | nc -C localhost 2525 | tee bad-client.log
    - nc -w 10 -C 127.0.0.1 2525 | tee good-client.log
    - diff bad-client.log samotop/examples/prudence-bad.txt
    - diff good-client.log samotop/examples/prudence-good.txt

example-cmd:
  extends: .example-template
  variables:
    EXAMPLE: on-cmd
    INPUT: samotop/examples/mailsessionlmtp.txt
    OUTPUT: samotop/examples/mailbody.txt
  script:
    - cargo run --example ${EXAMPLE:?} <"$INPUT" >client.log
    - cat "$INPUT"
    - cat client.log
    - find tmp/samotop/spool/new/ -type f -print -exec cat {} \;
    - test -z "$OUTPUT" || diff tmp/samotop/spool/new/* "$OUTPUT"

check-crates:
  stage: release
  interruptible: true
  script:
    - |
      cargo metadata --format-version 1 |
      jq -r '.workspace_members | .[]' |
      cut -d ' ' -f1 |
      xargs -I {} curl -sSLf https://crates.io/api/v1/crates/{} |
      jq -r '.crate.name  + " " + .versions[].num'

publish-crates:
  stage: build
  artifacts:
    paths:
      - target/publish-pipeline.yml
  interruptible: true
  before_script:
    - rustc --version --verbose
    - cargo --version --verbose
  script:
    - cp .gitlab-ci.publish.yml target/publish-pipeline.yml
    - |
      cargo metadata --format-version 1 | 
        jq -r '.workspace_members | .[]' | 
        cut -d ' ' -f-2 | tr ' ' '/' | 
        sed -r 's/(.*)\/(.*)/\0: \n  extends: .publish-crate\n  needs: ["\0 test"]\n  dependencies: ["\0 test"]\n  environment: crate\/\1\n/g' |
        tee -a target/publish-pipeline.yml
    - |
      cargo metadata --format-version 1 | 
        jq -r '.workspace_members | .[]' | 
        cut -d ' ' -f-2 | tr ' ' '/' | 
        sed 's/.*/\0 test: \n  extends: .test-crate\n/g' |
        tee -a target/publish-pipeline.yml

publish-crates-trigger:
  stage: release
  trigger:
    include:
      - artifact: target/publish-pipeline.yml
        job: publish-crates

server-version:
  stage: build
  script:
    - SAMOTOP_VERSION=$(cargo run -p samotop-server -- --version | cut -d' ' -f2)
    - echo "SAMOTOP_VERSION=$SAMOTOP_VERSION" > vars.env
    - echo "SAMOTOP_IMAGE=$CI_REGISTRY_IMAGE/samotop:$SAMOTOP_VERSION" >> vars.env
    - cat vars.env
  interruptible: true
  artifacts:
    reports:
      dotenv: vars.env

server-docker-image:
  extends: .kaniko-build-template
  stage: release
  interruptible: true
  variables:
    COMPONENT: samotop
    CONTEXT: .
    DOCKERFILE: Dockerfile
    BUILD_ARGS: ""
  only:
    changes:
      - samotop-server/**/*
      - Dockerfile
      - .gitlab-ci.yml
  environment:
    name: server-docker-image
    url: https://gitlab.com/BrightOpen/Samotop/container_registry/1510406
