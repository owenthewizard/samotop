include:
  - "/.gitlab-ci.config.yml"

check:
  extends: .publish-crate
  when: always
  script:
    - |
      cargo metadata --format-version 1 |
      jq -r '.workspace_members | .[]' |
      cut -d ' ' -f1 |
      xargs -I {} curl -sSLf https://crates.io/api/v1/crates/{} |
      jq -r ' .crate.name  + " " + .versions[].num '

.publish-crate:
  extends: .test-crate
  stage: release
  when: manual
  allow_failure: false
  # rules:
  #   - if: '$COMPVER =~ /-[^\/]+$/ && $CI_COMMIT_REF_NAME != "master"'
  #     when: always
  #   - if: '$COMPVER !~ /-[^\/]+$/ && $CI_COMMIT_REF_NAME == "master"'
  #     when: always
  #   - when: never
  script:
    - echo "Releasing component ${COMPONENT:?cannot be empty} v ${VERSION:?cannot be empty}"
    - cargo publish --manifest-path "$COMPONENT/Cargo.toml" --token "$CRATES_KEY" --color always

.test-crate:
  variables:
    COMPVER: $CI_JOB_NAME
  stage: test
  before_script:
    - rustc --version --verbose
    - cargo --version --verbose
    - COMPVER="${COMPVER%% *}"
    - COMPONENT="$(dirname "$COMPVER")"
    - VERSION="${COMPVER##$COMPONENT/}"
  script:
    - echo "Testing component ${COMPONENT:?cannot be empty} v ${VERSION:?cannot be empty}"
    - cargo test --manifest-path "$COMPONENT/Cargo.toml" --release --no-default-features --color always
    - cargo test --manifest-path "$COMPONENT/Cargo.toml" --release --all-features --color always
    - test "$VERSION" == "$(cargo pkgid --manifest-path "$COMPONENT/Cargo.toml" | cut -d '#' -f2- | tr -d '\n')"
    - cargo publish --dry-run --manifest-path "$COMPONENT/Cargo.toml" --color always
